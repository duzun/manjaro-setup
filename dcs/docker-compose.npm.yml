#
# docker-compose -f docker-compose.yml -f docker-compose.npm.yml up -d
#

version: "3.6"

volumes:
    npm_data:
    npm_letsencrypt:
    npm_mysql:


services:
    npm:
        image: "jc21/nginx-proxy-manager:latest"
        container_name: npm
        restart: always
        ports:
            - "81:81" # UI
            # Proxy:
            # - "443:443"
            # - "80:80"
            - "127.0.0.3:80:80"
            - "127.0.0.3:443:443"
        labels:
            hostname: "npm"
            traefik.enable: true
            traefik.docker.network: traefik

            # npm web UI listening on port :81
            traefik.http.services.npm_ui.loadbalancer.server.port: "81"

            traefik.http.routers.npms.entryPoints: "websecure" # :443
            traefik.http.routers.npm.entryPoints: "web" # :80

            traefik.http.routers.npms.rule: "HostRegexp(`npm.lh`,`{subdomain:.+?}.npm.lh`)"
            traefik.http.routers.npms.tls: "true"
            traefik.http.routers.npm.rule: "HostRegexp(`npm.lh`,`{subdomain:.+?}.npm.lh`)"

            traefik.http.routers.npms.service: "npm_ui"
            traefik.http.routers.npm.service: "npm_ui"

            # npm proxy on ports :80 & :443 - catch-all on traefik side
            traefik.http.services.npm_proxy.loadbalancer.server.port: "80"
            traefik.http.routers.npm_proxy.service: "npm_proxy"
            traefik.http.routers.npm_proxy.entryPoints: "web"
            traefik.http.routers.npm_proxy.rule: "PathPrefix(`/`)"
            traefik.http.routers.npm_proxy.priority: "1"

            traefik.tcp.services.npm_proxys.loadbalancer.server.port: "443"
            traefik.tcp.routers.npm_proxys.service: "npm_proxys"
            traefik.tcp.routers.npm_proxys.entryPoints: "websecure"
            traefik.tcp.routers.npm_proxys.rule: "HostSNI(`*`)"
            # traefik.tcp.routers.npm_proxys.tls: "{}"
            traefik.tcp.routers.npm_proxys.tls.passthrough: "true"

        healthcheck:
            test: [ "CMD", "/bin/check-health" ]
            interval: 10s
            timeout: 3s
        environment:
            DB_MYSQL_HOST: "npm_db"
            DB_MYSQL_PORT: 3306
            DB_MYSQL_USER: "npm"
            DB_MYSQL_PASSWORD: "npm4lh"
            DB_MYSQL_NAME: "npm"
        volumes:
            - type: volume
              source: npm_data
              target: /data
            - type: volume
              source: npm_letsencrypt
              target: /etc/letsencrypt
        networks:
            - traefik

    npm_db:
        image: "jc21/mariadb-aria:latest"
        container_name: npm_db
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: "npm"
            MYSQL_DATABASE: "npm"
            MYSQL_USER: "npm"
            MYSQL_PASSWORD: "npm4lh"
        volumes:
            - type: volume
              source: npm_mysql
              target: /var/lib/mysql
        networks:
            - traefik
