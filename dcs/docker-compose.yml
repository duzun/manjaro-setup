version: "3.6"
networks:
    traefik:
        driver: bridge
        name: traefik

services:
    traefik:
        image: traefik:v2.10
        container_name: traefik
        hostname: "traefik.lh"
        restart: always
        # network_mode: bridge
        # Enables the web UI and tells Traefik to listen to docker
        command:
            [
                "--api.insecure=true",
                "--accesslog=true",
                "--entryPoints.web.address=:80",
                "--entryPoints.websecure.address=:443",
                "--entryPoints.mysql.address=:3306",
                "--providers.docker.defaultRule=Host(`{{ or (index .Labels \"hostname\") (normalize .Name) }}`)",
                "--providers.file.filename=/etc/ssl/private/tls.yaml",
            ]
        labels:
            hostname: "traefik.lh"
            traefik.enable: true
            traefik.docker.network: traefik
            # If the container exposes more than one port, we have to tell
            # Traefik which one to use:
            traefik.http.services.traefik_ui.loadbalancer.server.port: "8080"
            # This rule is the same as the defaultRule (see labels.hostname)
            # traefik.http.routers.traefiks.rule: "Host(`traefik.lh`)"
            traefik.http.routers.traefiks.tls: "true"
            traefik.http.routers.traefiks.entryPoints: "websecure"
            traefik.http.routers.traefik.entryPoints: "web"
        ports:
            # The HTTP port
            - "1080:80"
            - "127.0.0.2:80:80"
            # The HTTPS port
            - "1443:443"
            - "127.0.0.2:443:443"
            # MySQL port
            - "127.0.0.2:3306:3306"
            # The Web UI (enabled by --api.insecure=true) exposed through Traefik
            # - "8902:8080"
        volumes:
            # So that Traefik can listen to the Docker events
            - /run/docker.sock:/var/run/docker.sock
            - ./cert:/etc/ssl/private
        networks:
            - traefik

    docker_dns:
        image: phensley/docker-dns
        container_name: dns
        hostname: "dns.lh"
        restart: always
        volumes:
            - /run/docker.sock:/docker.sock
        command: --domain lh
        networks:
            - traefik
        labels:
            # hostname: "dns.lh"
            traefik.enable: true
            traefik.docker.network: traefik

    portainer:
        image: portainer/portainer
        container_name: portainer
        hostname: "portainer.lh"
        restart: always
        # network_mode: bridge
        labels:
            # hostname: "portainer.lh" # used by providers.docker.defaultRule only, when no routers
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.http.routers.portainer.entryPoints: "websecure"
            traefik.http.routers.portainer.rule: "HostRegexp(`portainer.lh`,`{subdomain:.+?}.portainer.lh`)"
            traefik.http.routers.portainer.tls: "true"
            traefik.http.routers.portainer_.entryPoints: "web"
            traefik.http.routers.portainer_.rule: "HostRegexp(`portainer.lh`,`{subdomain:.+?}.portainer.lh`)"
            # There is only one port exposed for this container,
            # thus no need to define it explicitly
            traefik.http.services.portainer.loadbalancer.server.port: "9000"
        # ports:
        #     # Web UI through traefik
        #     - 8901:9000
        volumes:
            - /run/docker.sock:/var/run/docker.sock
            - /data
        networks:
            - traefik

    mailhog:
        image: mailhog/mailhog
        container_name: mailhog
        hostname: "mailhog.lh"
        restart: always
        # network_mode: bridge
        labels:
            hostname: "mailhog.lh"
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.http.routers.mailhogs.entryPoints: "websecure"
            traefik.http.routers.mailhogs.tls: "true"
            traefik.http.routers.mailhog.entryPoints: "web"
            traefik.http.services.mailhog_ui.loadbalancer.server.port: "8025"
        ports:
            - 25:1025
            # Web UI through traefik
            # - 8025:8025
        networks:
            - traefik
